DROP FUNCTION IF EXISTS ZOO.PESQUISA_RECINTO
GO
CREATE FUNCTION ZOO.PESQUISA_RECINTO
(
    @recintoID INT
)
RETURNS TABLE
AS
RETURN
(
    SELECT 
        r.Nome,
        r.Nome_JZ,
        r.Estado,
        CASE WHEN res.Recinto_ID IS NOT NULL THEN res.Max_capacidade ELSE NULL END AS Max_capacidade,
        CASE WHEN h.Recinto_ID IS NOT NULL THEN (SELECT COUNT(*) FROM ZOO.HABITACULO WHERE Habitat_ID = h.Recinto_ID) ELSE NULL END AS n_habitaculos
    FROM 
        ZOO.RECINTO r
        LEFT JOIN ZOO.RESTAURACAO res ON r.ID = res.Recinto_ID AND r.Nome_JZ = res.Nome_JZ
        LEFT JOIN ZOO.HABITAT h ON r.ID = h.Recinto_ID AND r.Nome_JZ = h.Nome_JZ
    WHERE 
        r.ID = @recintoID
)
GO

DROP FUNCTION IF EXISTS ZOO.BILHETES_VENDIDOS 
GO
CREATE FUNCTION ZOO.BILHETES_VENDIDOS
(
    @recintoID INT
)
RETURNS INT
AS
BEGIN
    DECLARE @bilhetes INT = NULL;
    IF EXISTS (SELECT * FROM ZOO.BILHETEIRA WHERE Recinto_ID = @recintoID)
    BEGIN
        SELECT @bilhetes = COUNT(*)
        FROM ZOO.BILHETE
        WHERE Bilheteira_ID = @recintoID;
    END
    RETURN @bilhetes;
END
GO

DROP FUNCTION IF EXISTS ZOO.GET_TIPO_RECINTO
GO
CREATE FUNCTION ZOO.GET_TIPO_RECINTO
(
    @recintoID INT
)
RETURNS VARCHAR(30)
AS
BEGIN
    DECLARE @tipo VARCHAR(30) = NULL;
    
    -- Check specific tables first
    IF EXISTS (SELECT 1 FROM ZOO.RESTAURACAO WHERE Recinto_ID = @recintoID)
    BEGIN
        SELECT @tipo = 'RESTAURACAO';
    END
    ELSE IF EXISTS (SELECT 1 FROM ZOO.BILHETEIRA WHERE Recinto_ID = @recintoID)
    BEGIN
        SELECT @tipo = 'BILHETEIRA';
    END
    ELSE IF EXISTS (SELECT 1 FROM ZOO.HABITAT WHERE Recinto_ID = @recintoID)
    BEGIN
        SELECT @tipo = 'HABITAT';
    END
    -- Check the main RECINTO table last
    ELSE IF EXISTS (SELECT 1 FROM ZOO.RECINTO WHERE ID = @recintoID)
    BEGIN
        SELECT @tipo = 'RECINTO';
    END
    
    RETURN @tipo;
END
GO


DROP FUNCTION IF EXISTS ZOO.PESQUISA_FUNCIONARIOS_RECINTO;
GO
CREATE FUNCTION ZOO.PESQUISA_FUNCIONARIOS_RECINTO
(
    @recintoID INT
)
RETURNS TABLE
AS
RETURN
(
    SELECT 
        p.Numero_CC,
        p.Nome,
        'Bilheteira' AS Funcao
    FROM ZOO.FUNCIONARIO f
    JOIN ZOO.FUNCIONARIO_BILHETEIRA fb ON f.Numero_CC = fb.F_Numero_CC AND fb.Bilheteira_ID = @recintoID
    JOIN ZOO.PESSOA p ON f.Numero_CC = p.Numero_CC
    UNION
    SELECT 
        p.Numero_CC,
        p.Nome,
        'Restauracao' AS Funcao
    FROM ZOO.FUNCIONARIO f
    JOIN ZOO.TRABALHADOR_RESTAURACAO tr ON f.Numero_CC = tr.F_Numero_CC AND tr.Restauracao_ID = @recintoID
    JOIN ZOO.PESSOA p ON f.Numero_CC = p.Numero_CC
    UNION
    SELECT 
        p.Numero_CC,
        p.Nome,
        'Seguranca' AS Funcao
    FROM ZOO.FUNCIONARIO f
    JOIN ZOO.SEGURANCA s ON f.Numero_CC = s.F_Numero_CC AND s.Recinto_ID = @recintoID
    JOIN ZOO.PESSOA p ON f.Numero_CC = p.Numero_CC
    UNION
    SELECT 
        p.Numero_CC,
        p.Nome,
        'Limpeza' AS Funcao
    FROM ZOO.FUNCIONARIO f
    JOIN ZOO.LIMPA l ON f.Numero_CC = l.FL_Numero_CC AND l.Recinto_ID = @recintoID
    JOIN ZOO.PESSOA p ON f.Numero_CC = p.Numero_CC
    UNION
    SELECT p.Numero_CC,
           p.Nome,
           'Tratador' AS Funcao
    FROM ZOO.FUNCIONARIO f
    JOIN ZOO.RESPONSAVEL_POR rp ON f.Numero_CC = rp.T_Numero_CC AND rp.Habitat_ID = @recintoID
    JOIN ZOO.PESSOA p ON f.Numero_CC = p.Numero_CC
)
GO


DROP FUNCTION IF EXISTS ZOO.PESQUISA_NUM_FUNCIONARIOS_RECINTO;
DROP FUNCTION IF EXISTS ZOO.NUMERO_FUNCIONARIOS_RECINTO;
GO
CREATE FUNCTION ZOO.NUMERO_FUNCIONARIOS_RECINTO
(
    @recintoID INT
)
RETURNS INT
AS
BEGIN
    DECLARE @numFuncionarios INT;

    SELECT @numFuncionarios = (
        SELECT COUNT(*)
        FROM (
            SELECT f.Numero_CC
            FROM ZOO.FUNCIONARIO f
            JOIN ZOO.FUNCIONARIO_BILHETEIRA fb ON f.Numero_CC = fb.F_Numero_CC AND fb.Bilheteira_ID = @recintoID
            UNION
            SELECT f.Numero_CC  
            FROM ZOO.FUNCIONARIO f
            JOIN ZOO.TRABALHADOR_RESTAURACAO tr ON f.Numero_CC = tr.F_Numero_CC AND tr.Restauracao_ID = @recintoID
            UNION
            SELECT f.Numero_CC    
            FROM ZOO.FUNCIONARIO f
            JOIN ZOO.SEGURANCA s ON f.Numero_CC = s.F_Numero_CC AND s.Recinto_ID = @recintoID
            UNION
            SELECT f.Numero_CC      
            FROM ZOO.FUNCIONARIO f
            JOIN ZOO.LIMPA l ON f.Numero_CC = l.FL_Numero_CC AND l.Recinto_ID = @recintoID
            UNION
            SELECT f.Numero_CC
            FROM ZOO.FUNCIONARIO f
            JOIN ZOO.RESPONSAVEL_POR rp ON f.Numero_CC = rp.T_Numero_CC AND rp.Habitat_ID = @recintoID
        ) AS FuncionarioList
    );

    RETURN @numFuncionarios;
END;
GO

DROP FUNCTION IF EXISTS ZOO.PESQUISA_BILHETES;
GO
CREATE FUNCTION ZOO.PESQUISA_BILHETES
(
    @recintoID INT
)
RETURNS TABLE
AS
RETURN
(
    SELECT 
        b.ID
    FROM ZOO.BILHETE b
    JOIN ZOO.BILHETEIRA bi ON b.Bilheteira_ID = bi.Recinto_ID
    WHERE bi.Recinto_ID = @recintoID
)
GO

DROP FUNCTION IF EXISTS ZOO.GET_ALL_BILHETE_INFO;
GO
CREATE FUNCTION ZOO.GET_ALL_BILHETE_INFO
(
    @ID INT
)
RETURNS TABLE
AS
RETURN
(
    SELECT 
        b.ID,
        b.Preco,
        b.Data_Compra,
        b.V_Numero_CC,
        b.F_Numero_CC,
        r.Nome AS Recinto_Nome,
        r.Nome_JZ,
        p.Nome AS Pessoa_Nome,
        p.Genero
    FROM ZOO.BILHETE b 
    JOIN ZOO.BILHETEIRA bil ON b.Bilheteira_ID = bil.Recinto_ID
    JOIN ZOO.RECINTO r ON bil.Recinto_ID = r.ID AND bil.Nome_JZ = r.Nome_JZ
    JOIN ZOO.PESSOA p ON b.V_Numero_CC = p.Numero_CC
    WHERE b.ID = @ID
)
GO

DROP FUNCTION IF EXISTS ZOO.PESQUISA_ANIMAL;
GO 
CREATE FUNCTION ZOO.PESQUISA_ANIMAL (
    @AnimalId INT
)
RETURNS TABLE
AS
RETURN
(
    SELECT *
    FROM ZOO.ANIMAL_DETALHADO
    WHERE AnimalId = @AnimalId
)
GO

DROP FUNCTION IF EXISTS ZOO.PESQUISA_ANIMAIS_HABITACULO;
GO
CREATE FUNCTION ZOO.PESQUISA_HABITACULOS_VAGOS(
    @Nome_JZ VARCHAR(50),
    @Habitat_ID INT = NULL
)
RETURNS TABLE
AS
RETURN
(
    SELECT T.ID, OCUPACAO, ZOO.HABITACULO.Habitat_ID, ZOO.HABITACULO.Max_Animais FROM ZOO.HABITACULO
    INNER JOIN (
        SELECT ZOO.HABITACULO.ID, COUNT(ZOO.ANIMAL.ID) AS OCUPACAO FROM ZOO.HABITACULO
        INNER JOIN ZOO.ANIMAL ON ZOO.HABITACULO.ID = ZOO.ANIMAL.Habitaculo_ID
        GROUP BY ZOO.HABITACULO.ID
    ) AS T ON ZOO.HABITACULO.ID = T.ID
    WHERE OCUPACAO < ZOO.HABITACULO.Max_Animais AND ZOO.HABITACULO.Nome_JZ = @Nome_JZ AND (@Habitat_ID IS NULL OR ZOO.HABITACULO.Habitat_ID = @Habitat_ID)
);
GO

DROP FUNCTION IF EXISTS ZOO.PESQUISA_RELACOES_ANIMAL;
GO
CREATE FUNCTION ZOO.PESQUISA_RELACOES_ANIMAL (
    @AnimalId INT
)
RETURNS TABLE
AS
RETURN
(
    SELECT CASE WHEN RELACAO.Animal1_ID = @AnimalId THEN ANIMAL2.Nome ELSE ANIMAL1.Nome END AS OtherAnimalName,
           CASE WHEN RELACAO.Animal1_ID = @AnimalId THEN RELACAO.Animal2_ID ELSE RELACAO.Animal1_ID END AS OtherAnimalId,
           RELACAO.Relacao
    FROM ZOO.ANIMAL_RELACIONADO AS RELACAO
    INNER JOIN ZOO.ANIMAL AS ANIMAL1 ON RELACAO.Animal1_ID = ANIMAL1.ID
    INNER JOIN ZOO.ANIMAL AS ANIMAL2 ON RELACAO.Animal2_ID = ANIMAL2.ID
    WHERE RELACAO.Animal1_ID = @AnimalId OR RELACAO.Animal2_ID = @AnimalId
)
GO

DROP FUNCTION IF EXISTS ZOO.PESQUISA_VETERINARIOS_ZOO;
GO
CREATE FUNCTION ZOO.PESQUISA_VETERINARIOS_ZOO (
    @Nome_JZ NVARCHAR(50)
)
RETURNS TABLE
AS
RETURN
(
    SELECT *
    FROM ZOO.VETERINARIO_DETALHADO
    WHERE Nome_JZ = @Nome_JZ
)
GO


DROP FUNCTION IF EXISTS ZOO.DETALHES_GERENTE;
GO
CREATE FUNCTION ZOO.DETALHES_GERENTE (
    @FuncionarioId INT
)
RETURNS TABLE
AS
RETURN (
    SELECT F.* FROM ZOO.FUNCIONARIO_DETALHADO_TOTAL_CONTRATO F
    INNER JOIN ZOO.TRATADOR ON F.Numero_CC = ZOO.TRATADOR.GerenteTratador_Numero
    WHERE ZOO.TRATADOR.F_Numero_CC = @FuncionarioId
    UNION ALL
    SELECT F.* FROM ZOO.FUNCIONARIO_DETALHADO_TOTAL_CONTRATO F
    INNER JOIN ZOO.SEGURANCA ON F.Numero_CC = ZOO.SEGURANCA.GerenteSeguranca_Numero
    WHERE ZOO.SEGURANCA.F_Numero_CC = @FuncionarioId
    UNION ALL
    SELECT F.* FROM ZOO.FUNCIONARIO_DETALHADO_TOTAL_CONTRATO F
    INNER JOIN ZOO.VETERINARIO ON F.Numero_CC = ZOO.VETERINARIO.GerenteVet_Numero
    WHERE ZOO.VETERINARIO.F_Numero_CC = @FuncionarioId
);
GO


DROP FUNCTION IF EXISTS ZOO.FUNCIONARIO_BILHETEIRAS_DISPONIVEIS
GO
CREATE FUNCTION ZOO.FUNCIONARIO_BILHETEIRAS_DISPONIVEIS(
    @NUMERO_CC INT,
    @Nome_JZ NVARCHAR(50)
) RETURNS TABLE 
AS
RETURN
(  
    SELECT ZOO.RECINTO.* 
    FROM ZOO.RECINTO 
    INNER JOIN ZOO.BILHETEIRA ON ZOO.RECINTO.ID = ZOO.BILHETEIRA.Recinto_ID 
        AND ZOO.BILHETEIRA.Nome_JZ = ZOO.BILHETEIRA.Nome_JZ 
    LEFT JOIN (SELECT Bilheteira_ID FROM ZOO.FUNCIONARIO_BILHETEIRA WHERE F_Numero_CC = @NUMERO_CC) AS FB
        ON ZOO.RECINTO.ID = FB.Bilheteira_ID
    WHERE ZOO.RECINTO.Nome_JZ = @Nome_JZ 
        AND FB.Bilheteira_ID IS NULL
)
GO


DROP FUNCTION IF EXISTS ZOO.TRABALHADOR_RESTAURACAO_DISPONIVEIS;
GO
CREATE FUNCTION ZOO.TRABALHADOR_RESTAURACAO_DISPONIVEIS(
    @NUMERO_CC INT,
    @Nome_JZ NVARCHAR(50)
) RETURNS TABLE
AS
RETURN
(
    SELECT ZOO.RECINTO.* 
    FROM ZOO.RECINTO 
    INNER JOIN ZOO.RESTAURACAO ON ZOO.RECINTO.ID = ZOO.RESTAURACAO.Recinto_ID 
        AND ZOO.RESTAURACAO.Nome_JZ = ZOO.RESTAURACAO.Nome_JZ
    LEFT JOIN (SELECT Restauracao_ID FROM ZOO.TRABALHADOR_RESTAURACAO WHERE F_Numero_CC = @NUMERO_CC) AS TR
        ON ZOO.RECINTO.ID = TR.Restauracao_ID
    WHERE ZOO.RECINTO.Nome_JZ = @Nome_JZ 
        AND TR.Restauracao_ID IS NULL
)
GO

DROP FUNCTION IF EXISTS ZOO.FUNCIONARIO_LIMPEZA_DISPONIVEIS;
GO
CREATE FUNCTION ZOO.FUNCIONARIO_LIMPEZA_DISPONIVEIS(
    @NUMERO_CC INT,
    @Nome_JZ NVARCHAR(50)
) RETURNS TABLE
AS
RETURN
(
    SELECT ZOO.RECINTO.* 
    FROM ZOO.RECINTO 
    LEFT JOIN (SELECT Recinto_ID FROM ZOO.LIMPA WHERE FL_Numero_CC = @NUMERO_CC) AS FL
        ON ZOO.RECINTO.ID = FL.Recinto_ID
    WHERE ZOO.RECINTO.Nome_JZ = @Nome_JZ 
        AND FL.Recinto_ID IS NULL
)
GO

DROP FUNCTION IF EXISTS ZOO.SEGURANCA_DISPONIVEIS;
GO 
CREATE FUNCTION ZOO.SEGURANCA_DISPONIVEIS(
    @NUMERO_CC INT,
    @Nome_JZ NVARCHAR(50)
) RETURNS TABLE
AS
RETURN
(
    SELECT ZOO.RECINTO.* 
    FROM ZOO.RECINTO
    LEFT JOIN (SELECT Recinto_ID FROM ZOO.SEGURANCA WHERE F_Numero_CC = @NUMERO_CC) AS S
        ON ZOO.RECINTO.ID = S.Recinto_ID
    WHERE ZOO.RECINTO.Nome_JZ = @Nome_JZ 
        AND S.Recinto_ID IS NULL
)
GO

DROP FUNCTION IF EXISTS ZOO.TRATADOR_DISPONIVEIS;
GO 
CREATE FUNCTION ZOO.TRATADOR_DISPONIVEIS(
    @NUMERO_CC INT,
    @Nome_JZ NVARCHAR(50)
) RETURNS TABLE 
AS
RETURN
(
    SELECT ZOO.RECINTO.* 
    FROM ZOO.RECINTO
    LEFT JOIN (SELECT Habitat_ID FROM ZOO.RESPONSAVEL_POR WHERE T_Numero_CC = @NUMERO_CC) AS S
        ON ZOO.RECINTO.ID = S.Habitat_ID
    WHERE ZOO.RECINTO.Nome_JZ = @Nome_JZ 
        AND S.Habitat_ID IS NULL
)
GO